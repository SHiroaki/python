#include "normaldist.h"
#include <math.h>

double normal_distribution(double myu, double sigma, double x){
 
  double d;
  double coefficient, in_exp;
  
  coefficient = sqrt(2 * M_PI * sigma); //係数
  in_exp = exp( -pow( x - myu, 2 ) / (2 * sigma ));  //expの肩にのるやつ

  d = in_exp / coefficient;

  return d;

}

double get_base_bias(double myu, double sigma, int div, int gen){
  //基本となるバイアスを返す.divは何世代バイアスをかけるか.genは外圧のかかる世代

  double d;
  double coefficient, in_exp;
  double base_bias[1001];
  double bias_gen[div]; //biasがかかる世代[50,51,52,53...]
  int real_bias[div]; //biasとして+する値[0,12,25,12,0]
  
  int i, j, div_gen;

  for (i=0; i<=1000; i++){
    coefficient = sqrt(2 * M_PI * sigma); //係数
    in_exp = exp( -pow( x - myu, 2 ) / (2 * sigma ));  //expの肩にのるやつ
    d = in_exp / coefficient;    
    base_bias[i] = d*100000.0;
  }
  
  //1000をdiv区切りにする
  div_gen = 1000 / div;
  j = 0;
  for (i=0; i<=1000; i+=div_gen ){
    real_bias[j] = base_bias[i];
    j+=1;
  }

  for (i=0; i<div; i++){
    bias_gen[i] = gen + i;
  }

  return bias_gen

}
